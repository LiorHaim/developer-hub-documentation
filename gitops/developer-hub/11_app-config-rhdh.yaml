kind: ConfigMap
apiVersion: v1
metadata:
  name: app-config-rhdh
  namespace: demo-project
data:
  app-config-rhdh.yaml: |
    signInPage: oidc   
    app:
      title: My Red Hat Developer Hub Instance
      baseUrl: https://backstage-developer-hub-demo-project.${basedomain} # be aware: project 'demo-project' is part of the url. Change it if you use another project
    backend:
      auth:
        keys:
          - secret: ${BACKEND_SECRET}
      baseUrl: https://backstage-developer-hub-demo-project.${basedomain} # be aware: project 'demo-project' is part of the url. Change it if you use another project
      cors:
        origin: https://backstage-developer-hub-demo-project.${basedomain} # be aware: project 'demo-project' is part of the url. Change it if you use another project
    enabled:
      argocd: false
      github: false
      githubOrg: false
      gitlab: false
      jenkins: false
      keycloak: true
      kubernetes: false
      ocm: false
      permission: false
      sonarqube: false
      # techdocs: true TODO enable when AWS S3 environment is set up
      techdocs: false 
    catalog:
     providers:
       keycloakOrg:
         default:
           baseUrl: https://demo-keycloak-instance.apps.cluster-stq5j.dynamic.redhatworkshops.io
           loginRealm: rhdh # ${KEYCLOAK_REALM}
           realm: rhdh # ${KEYCLOAK_REALM}
           clientId: rhdh-client # ${KEYCLOAK_CLIENTID}
           clientSecret: 7iKyQUwyApIojzOlSj82vUWIhejv41E5 # ${KEYCLOAK_CLIENTSECRET}
           # highlight-add-start
           schedule: # optional; same options as in TaskScheduleDefinition
             # supports cron, ISO duration, "human duration" as used in code
             frequency: { minutes: 1 }
             # supports ISO duration, "human duration" as used in code
             timeout: { minutes: 1 }
             initialDelay: { seconds: 15 }
             # highlight-add-end
       # awsS3: TODO enable when AWS S3 environment is set up
         # default: # identifies your dataset / provider independent of config changes
           # bucketName: redhat-demo-dev-hub-1
           # #prefix: prefix/ # optional
           # region: eu-west-3 # optional, uses the default region otherwise
           # schedule: # same options as in TaskScheduleDefinition
             # # supports cron, ISO duration, "human duration" as used in code
             # #frequency: { minutes: 30 }
             # frequency: { minutes: 1 }
             # # supports ISO duration, "human duration" as used in code
             # timeout: { minutes: 3 }
             # initialDelay: { seconds: 15 }
    auth:
      environment: default
      session:
        secret: ${BACKEND_SECRET}
      providers:
        oidc:
          default:
    #        metadataUrl: <keycloak_base_url>/realms/rhdh/.well-known/openid-configuration # ${AUTH_OIDC_METADATA_URL}
            metadataUrl: https://demo-keycloak-instance.apps.cluster-stq5j.dynamic.redhatworkshops.io/realms/rhdh/.well-known/openid-configuration # ${AUTH_OIDC_METADATA_URL}
            clientId: rhdh-client # ${AUTH_OIDC_CLIENT_ID}
            clientSecret: 7iKyQUwyApIojzOlSj82vUWIhejv41E5 # ${AUTH_OIDC_CLIENT_SECRET}
            prompt: auto # ${AUTH_OIDC_PROMPT} # recommended to use auto
            ## uncomment for additional configuration options
            # callbackUrl: ${AUTH_OIDC_CALLBACK_URL}
            # tokenEndpointAuthMethod: ${AUTH_OIDC_TOKEN_ENDPOINT_METHOD}
            # tokenSignedResponseAlg: ${AUTH_OIDC_SIGNED_RESPONSE_ALG}
            # scope: ${AUTH_OIDC_SCOPE}
            ## Auth provider will try each resolver until it succeeds. Uncomment the resolvers you want to use to override the default resolver: `emailLocalPartMatchingUserEntityName`
            signIn:
              resolvers:
                - resolver: preferredUsernameMatchingUserEntityName
            #    - resolver: emailMatchingUserEntityProfileEmail
            #    - resolver: emailLocalPartMatchingUserEntityName
    # techdocs: TODO enable when AWS S3 environment is set up
      # builder: external
      # generator:
        # runIn: local
      # publisher:
        # type: 'awsS3'
        # awsS3:
          # bucketName: redhat-demo-dev-hub-1
          # credentials:
            # accessKeyId: <...>
            # secretAccessKey: <...>
          # region: eu-west-3
          # s3ForcePathStyle: true
          # sse: 'AES256'